import{property as e,camelToDash as t}from"hybrids";function r(e){switch(typeof e){case"undefined":return;case"number":return Number;case"boolean":return Boolean;case"object":return null===e?null:Array.isArray(e)?Array:Object;case"function":return Function;case"string":default:return String}}function n(e,t){switch(t){case String:case Number:return t(e);case Boolean:return!("false"===e||!e&&""!==e);case Array:return Array.isArray(e)?e:"string"==typeof e?/^\[.*\]$/.test(e)?JSON.parse(e):[]:e?t(e):[];case Object:return JSON.parse(e);case Function:default:return}}const a=new WeakMap,s=new Map;export default function(u,c={}){let i,o,b;return{...e(u,(function(e,l){i=r(u),o=t(l);const f=e.tagName,A=s.get(f)||new Map;s.set(f,A.set(o,{key:l,type:i}));const g=e.getAttribute(o);return null!==g&&(u=n(g,i),e[l]=u),a.get(e)||(b=new MutationObserver(t=>{const r=s.get(f);t.forEach(({attributeName:t,target:a})=>{const s=r.get(t);if(s){const{key:r,type:u}=s,c=n(a.getAttribute(t),u);c!==e[r]&&(a[r]=c)}})}),a.set(e,!0),b.observe(e,{attributes:!0})),c.connect&&c.connect(e,l),()=>{b&&(b.disconnect(),a.delete(e))}})),observe:(e,t,r)=>{!function(e,t,r,n,a){if(n!==a)switch(r){case null:case void 0:break;case Boolean:n?e.setAttribute(t,""):e.removeAttribute(t);break;case Array:null==n||0===n.length?e.removeAttribute(t):e.setAttribute(t,JSON.stringify(n));break;case Object:null==n||0===Object.keys(n).length?e.removeAttribute(t):e.setAttribute(t,JSON.stringify(n));break;case Function:break;case String:""===n||null==n?e.removeAttribute(t):e.setAttribute(t,n);break;case Number:default:null==n?e.removeAttribute(t):e.setAttribute(t,n)}}(e,o,i,t,r),c.observe&&c.observe(e,t,r)}}}export{n as coerceToType,r as getType};
//# sourceMappingURL=index.js.map

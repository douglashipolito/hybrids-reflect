import{property as e}from"hybrids";const t=new Map;function r(e){switch(typeof e){case"undefined":return;case"number":return Number;case"boolean":return Boolean;case"object":return null===e?null:Array.isArray(e)?Array:Object;case"function":return Function;case"string":default:return String}}function n(e,t){switch(t){case String:case Number:return t(e);case Boolean:return!("false"===e||!e&&""!==e);case Array:return Array.isArray(e)?e:"string"==typeof e?/^\[.*\]$/.test(e)?JSON.parse(e):[]:e?t(e):[];case Object:return JSON.parse(e);case Function:default:return}}const s=new WeakMap,a=new Map;export default function(u,c={}){let o,i,b;const l={...e(u,(function(e,l){o=r(u),i=function(e){let r=t.get(e);return void 0===r&&(r=e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),t.set(e,r)),r}(l);const g=e.tagName,f=a.get(g)||new Map;a.set(g,f.set(i,{key:l,type:o}));const A=e.getAttribute(i);let y;return null!==A&&(u=n(A,o),e[l]=u),s.get(e)||(b=new MutationObserver(t=>{const r=a.get(g);t.forEach(({attributeName:t,target:s})=>{const a=r.get(t);if(a){const{key:r,type:u}=a,c=n(s.getAttribute(t),u);c!==e[r]&&(s[r]=c)}})}),s.set(e,!0),b.observe(e,{attributes:!0})),c.connect&&(y=c.connect(e,l)),()=>{y&&y(),b&&(b.disconnect(),s.delete(e))}}))},g=l.get;l.get=(e,t=u)=>c.get?c.get(e,t):g(e,t);const f=l.set;return l.set=(e,t,r)=>c.set?c.set(e,t,r):f(e,t,r),l.observe=(e,t,r)=>{!function(e,t,r,n,s){if(n!==s)switch(r){case null:case void 0:break;case Boolean:n?e.setAttribute(t,""):e.removeAttribute(t);break;case Array:null==n||0===n.length?e.removeAttribute(t):e.setAttribute(t,JSON.stringify(n));break;case Object:null==n||0===Object.keys(n).length?e.removeAttribute(t):e.setAttribute(t,JSON.stringify(n));break;case Function:break;case String:""===n||null==n?e.removeAttribute(t):e.setAttribute(t,n);break;case Number:default:null==n?e.removeAttribute(t):e.setAttribute(t,n)}}(e,i,o,t,r),c.observe&&c.observe(e,t,r)},l}export{n as coerceToType,r as getType};
//# sourceMappingURL=index.js.map
